numbers <- str_extract_all(phones, pattern = "[0-9]", simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = "([2-9][0-9]{2})[- .]([0-9]{3})[- .]([0-9]{4})", simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = "[0-9][- .]", simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = "[0-9]", simplify = T)
numbers
num_loc <- str_locate_all(phones, "[0-9]+")[[1]]
str_sub(phones, num_loc[, "start"], num_loc[, "end"])
num_loc
phones
str_sub(phones, num_loc[, "start"], num_loc[, "end"])
num_loc <- str_locate_all(phones, "[0-9]+")[[1]]
str_sub(phones, num_loc[, "start"], num_loc[, "end"])
num_loc
phones <- c("Anna 077-789663", "Hagopik 99656565",
"Serozh2 099-65-6569 MALYAR")
numbers <- str_extract_all(phones, pattern = "[0-9]", simplify = T)
num_loc <- str_locate_all(phones, "[0-9]+")[[1]]
str_sub(phones, num_loc[, "start"], num_loc[, "end"])
phones <- c("Anna 077-789663", "Hagopik 99656565",
"Serozh2 099-65-6569 MALYAR")
numbers <- str_extract_all(phones, pattern = "[0-9]", simplify = T)
numbers
names <- str_extract_all(phones, pattern = "[A-Za-z]", simplify = T)
names
phones_data <- data.frame("Name" = names[, 1:3])
phone <- "([2-9][0-9]{2})[- .]([0-9]{3})[- .]([0-9]{4})"
numbers <- str_extract_all(phones, phone, simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = DGT, simplify = T)
numbers <- str_extract_all(phones, pattern = "[0-9]", simplify = T)
phones <- c("Anna 077-789663", "Hagopik 99656565",
"Serozh2 099-65-6569 MALYAR")
numbers <- str_extract_all(phones, pattern = "[0-9]+", simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = "{0, 0}[0-9]+", simplify = T)
numbers <- str_extract_all(phones, pattern = "*[0-9]+", simplify = T)
numbers <- str_extract_all(phones, pattern = "[0-9]+", simplify = T)
numbers <- str_extract_all(phones, pattern = "''{0, 0}[0-9]+", simplify = T)
numbers <- str_extract_all(phones, pattern = "''{0}[0-9]+", simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = "[0-9]+", simplify = T)
numbers
phones_data <- data.frame("Name" = names[, 1:3])
names <- str_extract_all(phones, pattern = "[A-Za-z]", simplify = T)
phones_data <- data.frame("Name" = names[, 1:3])
phones_data
phones_data <- data.frame("Name" = names[, .], "Phone" = [])
phones_data <- data.frame("Name" = names[, .], "Phone" = [, .])
phones_data <- data.frame("Name" = names[, .], "Phone" = numbers[, .])
phones_data <- data.frame("Name" = names[, .], "Phone" = numbers)
phones_data <- data.frame("Name" = names, "Phone" = numbers)
phones_data
View(phones_data)
names <- str_extract_all(phones, pattern = "[A-Za-z]+", simplify = T)
names
numbers <- str_extract_all(phones, pattern = "[0-9]+", simplify = T)
numbers
phones_data <- data.frame("Name" = names, "Phone" = numbers)
phones_data
phones_data <- data.frame("Name" = names, "Phone" = numbers, na.rm = T)
phones_data
phones_data <- data.frame("Name" = names, "Phone" = numbers)
phones_data
y <- c("may", "the", "force", "be", "with", "you")
substr(y, 2, 2) <- "#" # replacing with a hashtag
y
y <- c("may", "the", "force", "be", "with", "you")
substr(y, 2, 3) <- ":)" # replacing with a smile
y
phones <- c("Anna 077-789663", "Hagopik 99656565",
"Serozh2 099-65-6569 MALYAR")
numbers <- str_replace_all(phones, pattern = "-", replacement = "")
numbers
numbers <- str_extract_all(phones, pattern = "[0-9]+", simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = "[0-9]+")
phones <- c("Anna 077-789663", "Hagopik 99656565",
"Serozh2 099-65-6569 MALYAR")
numbers <- str_replace_all(phones, pattern = "-", replacement = "")
numbers <- str_extract_all(phones, pattern = "[0-9]+")
numbers
numbers <- str_extract_all(phones, pattern = "[0-9]+", simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = "[0-9]{6, 20}", simplify = T)
numbers <- str_extract_all(phones, pattern = "[0-9]{6, }", simplify = T)
numbers <- str_extract_all(phones, pattern = "[0-9]{6,}", simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = "[0-9]", simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = "[0-9]+", simplify = T)
numbers
phones <- c("Anna 077-789663", "Hagopik 99656565",
"Serozh2 099-65-6569 MALYAR")
numbers <- str_replace_all(phones, pattern = "-", replacement = "")
numbers
numbers <- str_extract_all(phones, pattern = "[0-9]+", simplify = T)
numbers
numbers <- str_extract(phones, pattern = "[0-9]+", simplify = T)
numbers
numbers <- str_replace_all(phones, pattern = "-", replacement = "")
numbers <- str_extract(phones, pattern = "[0-9]+")
numbers
numbers <- str_replace_all(phones, pattern = "-", replacement = "")
numbers <- str_extract_all(phones, pattern = "[0-9]+", simplify = T)
numbers
names <- str_extract_all(phones, pattern = "[A-Za-z]+", simplify = T)
names
phones_data <- data.frame("Name" = names, "Phone" = numbers)
phones_data
paste(numbers)
paste(numbers, separator = "")
numbers
numbers <- str_extract_all(phones, pattern = "[0-9]+''*", simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = "[0-9]*", simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = "[0-9]+", simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = "[0-9]{2,}", simplify = T)
numbers
numbers <- str_replace_all(phones, pattern = "-", replacement = "^$")
numbers <- str_extract_all(phones, pattern = "[0-9]{2,}", simplify = T)
numbers
numbers <- str_replace_all(phones, pattern = "-", replacement = "^$")
numbers
numbers <- str_replace_all(phones, pattern = "-", replacement = "A")
numbers <- str_extract_all(phones, pattern = "[0-9]{2,}", simplify = T)
numbers
numbers <- str_replace_all(phones, pattern = "-", replacement = '')
numbers <- str_extract_all(phones, pattern = "[0-9]{2,}", simplify = T)
numbers
numbers <- str_replace_all(phones, pattern = "[0-9]?-", replacement = "")
numbers
numbers <- str_extract_all(phones, pattern = "[a-zA-z]?[0-9]", simplify = T)
numbers
phones <- c("Anna 077-789663", "Hagopik 99656565",
"Serozh2 099-65-6569 MALYAR")
numbers <- str_replace_all(phones, pattern = "[0-9]", replacement = "")
numbers <- str_extract_all(phones, pattern = "[a-zA-z]?[0-9]", simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = "[a-zA-z]+[0-9]", simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = "([a-zA-z]+)[0-9]", simplify = T)
numbers
numbers <- str_replace_all(phones, pattern = "[0-9]", replacement = "")
numbers <- str_extract_all(phones, pattern = "([a-zA-z]+)[0-9]", simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = "[a-zA-z]+[0-9]", simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = "^[a-zA-z]+[0-9]", simplify = T)
numbers
numbers <- str_extract_all(phones, pattern = "^([a-zA-z]+[0-9])", simplify = T)
numbers
phones <- c("Anna 077-789663", "Hagopik 99656565",
"Serozh2 099-65-6569 MALYAR")
numbers <- str_replace_all(phones, pattern = "[0-9]", replacement = "")
numbers <- str_extract_all(phones, pattern = "^([a-zA-z]+[0-9])", simplify = T)
numbers
numbers <- str_remove_all(phones, pattern = "[a-zA-Z]")
numbers
numbers <- str_remove_all(phones, pattern = "[a-zA-Z]-")
numbers <- as.numeric(numbers)
phones <- c("Anna 077-789663", "Hagopik 99656565",
"Serozh2 099-65-6569 MALYAR")
numbers <- str_remove_all(phones, pattern = "[a-zA-Z]-")
numbers
numbers <- str_remove_all(phones, pattern = "[a-zA-Z]\\-")
numbers
numbers <- str_remove_all(phones, pattern = "[a-zA-Z]\\, -")
numbers <- as.numeric(numbers)
numbers
numbers <- str_remove_all(phones, pattern = "[a-zA-Z]\\, -")
numbers
numbers <- str_remove_all(phones, pattern = "\\-[a-zA-Z]")
numbers
numbers <- str_remove_all(phones, pattern = "\\-")
numbers
numbers <- str_remove_all(phones, pattern = "[a-zA-Z]")
numbers
numbers <- str_remove_all(phones, pattern = "\\-")
numbers <- str_remove_all(numbers, pattern = "[a-zA-Z]")
numbers
numbers <- str_remove_all(numbers, pattern = "//s+")
numbers
numbers <- str_remove_all(numbers, pattern = "^//s+")
numbers
numbers <- as.numeric(numbers)
numbers
numbers <- str_remove_all(phones, pattern = "\\-")
numbers <- str_remove_all(numbers, pattern = "[a-zA-Z]")
numbers
trimws(numbers)
numbers
numbers <- str_replace(numbers, "\\s[^ ]+$", "")
numbers
numbers <- trimws(numbers)
numbers <- str_remove_all(phones, pattern = "\\-")
numbers <- str_remove_all(numbers, pattern = "[a-zA-Z]")
numbers <- trimws(numbers)
numbers <- str_replace(numbers, "\\s[^ ]+$", "")
numbers
numbers <- str_replace(numbers, "".*? (.+)", "\\1")
numbers <- str_replace(numbers, ".*? (.+)", "\\1")
numbers
numbers <- str_remove_all(phones, pattern = "\\-")
numbers <- str_remove_all(numbers, pattern = "[a-zA-Z]")
numbers <- trimws(numbers)
numbers <- str_replace(numbers, ".*? (.+)", "")
numbers
numbers <- str_replace(numbers, pattern = "[:space:]+", replacement = "")
numbers
numbers <- str_remove_all(phones, pattern = "\\-")
numbers <- str_remove_all(numbers, pattern = "[a-zA-Z]")
numbers <- trimws(numbers)
numbers
numbers <- str_replace(numbers, pattern = "+[:space:]", replacement = "")
numbers <- str_replace(numbers, pattern = "[:space:]*", replacement = "")
numbers
numbers <- str_remove_all(phones, pattern = "\\-")
numbers <- str_remove_all(numbers, pattern = "[a-zA-Z]")
numbers <- trimws(numbers)
numbers <- str_replace(numbers, pattern = "[:space:]", replacement = "")
numbers
install.packages("stringr")
install.packages("stringr")
library(stringr)
install.packages(c("dplyr", "ggplot2", "httpuv", "stringi"))
phones <- c("Anna 077-789663", "Hagopik 99656565",
"Serozh2 099-65-6569 MALYAR")
numbers <- str_remove_all(phones, pattern = "\\-")
library(ggplot2)
library(stringr)
phones <- c("Anna 077-789663", "Hagopik 99656565",
"Serozh2 099-65-6569 MALYAR")
numbers <- str_remove_all(phones, pattern = "\\-")
numbers <- str_remove_all(numbers, pattern = "[a-zA-Z]")
numbers <- trimws(numbers)
numbers
numbers <- str_remove_all(phones, pattern = "(?!^\d+$)^.+$")
numbers <- str_remove_all(phones, pattern = "(?!^\\d+$)^.+$")
numbers
numbers <- str_remove_all(phones, pattern = "^[0-9]")
numbers
numbers <- str_remove_all(phones, pattern = "[^0-9]")
numbers
numbers <- str_remove_all(phones, pattern = "[0-9]+")
numbers
numbers <- str_remove_all(phones, pattern = "[^0-9]")
numbers
numbers <- str_remove_all(phones, pattern = "[a-zA-Z]+")
numbers
strcapture("(\\w+)\\s(\\S+)",phones,data.frame(names=character(),phone=character()))
?strcapture()
read.table(text=phones,col.names = c("names","phone","office"),fill=T)
data.frame(names=str_extract(phones,"^\\w+"),phones=str_extract(phones,"\\b\\d[^ ]*"))
numbers <- str_extract(phones,"^\\w+")
numbers
names <- str_extract(phones, "^\\w+")
names
numbers <- str_extract(phones,"\\b\\d[^ ]*")
numbers
phones_data <- data.frame("Name" = names, "Phone" = numbers)
phones_data
names <- str_extract(phones, "^[A-Za-z]+")
names
numbers <- phones %>%
str_extract(phones, "[0-9]+[-]?[0-9]+[-]?[0-9]+")) %>%
str_replace("-", "")
library(dplyr)
numbers <- phones %>%
str_extract(phones, "[0-9]+[-]?[0-9]+[-]?[0-9]+")) %>%
str_replace(pattern = "-", replacement =  "")
numbers <- str_replace(pattern = "-", replacement =  "",
str_extract(phones, "[0-9]+[-]?[0-9]+[-]?[0-9]+")))
numbers <- str_replace(pattern = "-", replacement =  "",
str_extract(phones, "[0-9]+[-]?[0-9]+[-]?[0-9]+"))
numbers
numbers <- str_replace(str_extract(phones, "[0-9]+[-]?[0-9]+[-]?[0-9]+"),
pattern = "-", replacement =  "")
numbers
numbers <- gsub("-", "", str_extract(phones, "[0-9]+[-]?[0-9]+[-]?[0-9]+"))
numbers
numbers <- str_replace_all(str_extract(phones, "[0-9]+[-]?[0-9]+[-]?[0-9]+"),
pattern = "-", replacement =  "")
numbers
names <- str_extract(phones, "^[A-Za-z]+")
names
numbers <- str_replace_all(str_extract(phones, "[0-9]+[-]?[0-9]+[-]?[0-9]+"),
pattern = "-", replacement =  "")
numbers
phones_data <- data.frame("Name" = names, "Phone" = numbers)
phones_data
numbers = str_extract(phones, "\\b[-0-9]+\\b") %>%
str_remove_all("-")
numbers
phones <- c("Anna 077-789663", "Hagopik 99656565",
"Serozh2 099-65-6569 MALYAR")
names <- str_extract(phones, "^[A-Za-z]+")
names # names only
numbers <- str_extract(phones, "\\b[-0-9]+\\b") %>%
str_remove_all("-")
numbers # numbers only
phones_data <- data.frame("Name" = names, "Phone" = numbers)
phones_data # data-frame of names and numbers
read.csv("autos.csv")
autos <- read.csv("autos.csv")
head(autos)
View(autos)
autos_new <- autos[, "Price"]
View(autos)
autos_new
autos_new <- autos[, "Price" >= 100]
autos_new <- autos[, 150000 >= "Price" >= 100]
autos_new <- autos[, 150000 => "Price" >= 100]
autos_new <- autos[, which(autos$Price >= 100 & autos$Price <= 150000)]
autos_new <- subset(autos, Price >= 100 & Price < 150000)
View(autos_new)
autos_new <- subset(autos, Price >= 100 & Price <= 150000 &
Power >= 50 & Power <= 650 &
Year >= 1930 & Year <= 2016)
View(autos_new)
library("dplyr")
autos_new1 <- autos %>%
filter(Price >= 100 & Price <= 150000) %>%
filter(Power >= 50 & Power <= 650) %>%
filter(Year >= 1930 & Year <= 2016)
autos_new1 <- autos %>%
filter(Price >= 100 & Price <= 150000 &
Power >= 50 & Power <= 650 &
Year >= 1930 & Year <= 2016)
autos2010 <- subset(autos_new, Year == 2010)
View(autos2010)
library(ggplot2)
View(autos_new)
autos2010 <- subset(autos_new, Year == 2010 & Brand == 'mercedes_benz')
View(autos2010)
merc_2010 <- subset(autos_new, Year == 2010 & Brand == 'mercedes_benz')
## reading "autos.csv" data
autos <- read.csv("autos.csv")
## subsetting using standard functionallity
autos_new <- subset(autos, Price >= 100 & Price <= 150000 &
Power >= 50 & Power <= 650 &
Year >= 1930 & Year <= 2016)
## subsetting using "dplyr" functionallity
library("dplyr")
merc_2010 <- subset(autos_new, Year == 2010 & Brand == 'mercedes_benz')
library(ggplot2)
ggplot(data = autos2010, aes(x = Price, y = Power)) +
geom_point()
ggplot(data = merc_2010, aes(x = Price, y = Power)) +
geom_point()
ggplot(data = merc_2010, aes(x = Price, y = Power)) +
geom_line()
View(merc_2010)
View(merc_2010)
ggplot(data = merc_2010, aes(x = Price, y = Power)) +
geom_point()
## checking power and price correlation through scatterplot
ggplot(data = merc_2010, aes(x = Power, y = Price)) +
geom_point()
View(autos_new)
ggplot(data = autos_new, aes(x = Brand)) +
geom_histogram()
ggplot(data = autos_new, aes(x = Brand)) +
geom_histogram(stat = "count")
ggplot(data = autos_new, aes(x = Brand)) +
geom_histogram(stat = "count")+
coord_flip()
ggplot(data = autos_new, aes(x = Brand)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = autos_new, aes(x = Brand)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 2))
ggplot(data = autos_new, aes(x = Brand)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = autos_new, aes(x = Brand)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90))
, hjust = 1
ggplot(data = autos_new, aes(x = Brand)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
## historgam for Brand in our dataset
ggplot(data = autos_new, aes(x = Brand)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) # rotate the labels on x
## subsetting a brand: Mercedez-Benz
merc <- subset(autos_new, Brand == 'mercedes_benz')
## subsetting a brand: BMW
bmw <- subset(autos_new, Brand == 'bmw')
ggplot(data = merc, aes(x = Model)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) # rotate the labels on x
ggplot(data = bmw, aes(x = Model)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) # rotate the labels on x
## historgams for "Model" in our datasets: merc
ggplot(data = merc, aes(x = Model)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) # rotate the labels on x
View(merc)
ggplot(data = bmw, aes(x = Model)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) # rotate the labels on x
autos_bmw_merc <- autos_new[autos_new$Brand %in% 'mercedes_benz' &
autos_new$Brand %in% 'bmw', ]
## historgams for "Model" in our datasets: mercedes and bmw
ggplot(data = autos_bmw_merc, aes(x = Model)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) # rotate the labels on x
## same with faceting
merc_benz <- subset(autos_new, Brand == c('bmw', 'mercedes_benz')
## same with faceting
merc_benz <- subset(autos_new, Brand == c('bmw', 'mercedes_benz'))
## same with faceting
merc_benz <- subset(autos_new, Brand == c('bmw', 'mercedes_benz'))
ggplot(data = merc_benz, aes(x = Model)) +
geom_histogram(stat = "count") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) # rotate the labels on x
ggplot(data = merc_benz, aes(x = Model)) +
geom_histogram(stat = "count") +
facet_grid(.~Brand)
ggplot(data = merc_benz, aes(x = Model)) +
geom_histogram(stat = "count") +
facet_grid(.~Brand) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) # rotate the labels on x
## same with faceting
merc_benz <- subset(autos_new, Brand == c('bmw', 'mercedes_benz'))
## same with faceting
merc_benz <- filter(autos_new, Brand == c('bmw', 'mercedes_benz'))
ggplot(data = merc_benz, aes(x = Model)) +
geom_histogram(stat = "count") +
facet_grid(.~Brand) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) # rotate the labels on x
## same with faceting
merc_benz <- subset(autos_new, Brand == c('bmw', 'mercedes_benz'))
ggplot(data = merc_benz, aes(x = Model)) +
geom_histogram(stat = "count") +
facet_grid(.~Brand) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) # rotate the labels on x
ggplot(data = autos_new, aes(x = Fuel)) +
coord_polar()
ggplot(data = autos_new, aes(x = Fuel)) +
geom_bar()
ggplot(data = autos_new, aes(x = Fuel)) +
geom_bar()+
coord_polar()
ggplot(data = autos_new, aes(x = Fuel)) +
geom_bar() +
coord_polar()
ggplot(data = autos_new, aes(x = Fuel)) +
geom_bar(fill = True) +
coord_polar()
ggplot(data = autos_new, aes(x = Fuel)) +
geom_bar(fill = T) +
coord_polar()
ggplot(data = autos_new, aes(fill = Fuel)) +
geom_bar(width = 1) +
coord_polar()
ggplot(data = autos_new, aes(x = factor(1), fill = Fuel)) +
geom_bar(width = 1) +
coord_polar()
ggplot(data = autos_new, aes(x = factor(1), fill = Fuel)) +
geom_bar(width = 1) +
coord_polar(theta = y)
ggplot(data = autos_new, aes(x = factor(1), fill = Fuel)) +
geom_bar(width = 1) +
coord_polar(theta = "y")
ggplot(data = autos_new, aes(x = factor(2), fill = Fuel)) +
geom_bar(width = 1) +
coord_polar(theta = "y")
ggplot(data = autos_new, aes(x = factor(1), fill = Fuel)) +
geom_bar(width = 1) +
coord_polar(theta = "y")
library(wesanderson) ## color palette library
library(wesanderson) ## color palette library
## pie-chart for fuel types
ggplot(data = autos_new, aes(x = factor(1), fill = Fuel)) +
geom_bar(width = 1) +
coord_polar(theta = "y") +
scale_color_manual(values = wes_palette("GrandBudapest1"))
wes_palette(name = "IsleofDogs2")
## pie-chart for fuel types
ggplot(data = autos_new, aes(x = factor(1), fill = Fuel)) +
geom_bar(width = 1) +
coord_polar(theta = "y") +
scale_color_manual(values = wes_palette("IsleofDogs2"))
## pie-chart for fuel types
ggplot(data = autos_new, aes(x = factor(1), fill = Fuel)) +
scale_color_manual(values = wes_palette("IsleofDogs2")) +
geom_bar(width = 1) +
coord_polar(theta = "y")
## pie-chart for fuel types
ggplot(data = autos_new, aes(x = factor(1), fill = Fuel)) +
geom_bar(width = 1) +
scale_color_manual(values = wes_palette("IsleofDogs2")) +
coord_polar(theta = "y")
## pie-chart for fuel types
ggplot(data = autos_new, aes(x = factor(1), fill = Fuel)) +
geom_bar(width = 1) +
coord_polar(theta = "y")
vg = read.csv("Video_Games.csv", stringsAsFactors = F)
library(dplyr)
vg = vg %>% select(-c("Publisher", "JP_Sales", "Critic_Count", "User_Count", "Developer"))
# There is no GP_Sales in dataset, hece, I used Global_Sales instead
vg[c("NA_Sales", "EU_Sales", "Global_Sales")] = vg[c("NA_Sales", "EU_Sales", "Global_Sales")] %>% lapply(function(x)x*1000000)
vg = vg %>% filter(NA_Sales>=20000 & EU_Sales>=20000 & Rating %in% c("E", "M", "T", "E10+", "A0"))
